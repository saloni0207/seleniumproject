<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-11T12:12:58 IST" name="Suite" finished-at="2022-10-11T12:14:28 IST" duration-ms="90174">
    <groups>
    </groups>
    <test started-at="2022-10-11T12:12:58 IST" name="Test" finished-at="2022-10-11T12:14:28 IST" duration-ms="90174">
      <class name="testClasses.VerifyUserCanLogin">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testClasses.VerifyUserCanLogin@723ca036]" started-at="2022-10-11T12:12:58 IST" name="beforeClass" finished-at="2022-10-11T12:13:55 IST" duration-ms="56607" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanLogin@723ca036]" started-at="2022-10-11T12:13:55 IST" name="beforeMethod" finished-at="2022-10-11T12:13:55 IST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyUserCanLogIn()[pri:0, instance:testClasses.VerifyUserCanLogin@723ca036]" started-at="2022-10-11T12:13:55 IST" name="VerifyUserCanLogIn" finished-at="2022-10-11T12:13:59 IST" duration-ms="3763" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Profile name is not matching did not expect [Saloni] but found [Saloni]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Profile name is not matching did not expect [Saloni] but found [Saloni]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failEquals(Assert.java:1417)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:156)
at org.testng.Assert.assertNotEquals(Assert.java:2033)
at testClasses.VerifyUserCanLogin.VerifyUserCanLogIn(VerifyUserCanLogin.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserCanLogIn -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanLogin@723ca036]" started-at="2022-10-11T12:13:59 IST" name="afterMethod" finished-at="2022-10-11T12:14:00 IST" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserCanLogIn status=FAILURE method=VerifyUserCanLogin.VerifyUserCanLogIn()[pri:0, instance:testClasses.VerifyUserCanLogin@723ca036] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testClasses.VerifyUserCanLogin@723ca036]" started-at="2022-10-11T12:14:00 IST" name="afterClass" finished-at="2022-10-11T12:14:00 IST" duration-ms="582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testClasses.VerifyUserCanLogin -->
      <class name="testClasses.VerifyUserCanGetLowestPriceProduct">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e]" started-at="2022-10-11T12:14:00 IST" name="beforeClass" finished-at="2022-10-11T12:14:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e]" started-at="2022-10-11T12:14:00 IST" name="beforeMethod" finished-at="2022-10-11T12:14:00 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyUserCanSearchProduct()[pri:2, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e]" started-at="2022-10-11T12:14:00 IST" name="VerifyUserCanSearchProduct" finished-at="2022-10-11T12:14:03 IST" duration-ms="2294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserCanSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e]" started-at="2022-10-11T12:14:03 IST" name="afterMethod" finished-at="2022-10-11T12:14:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserCanSearchProduct status=SUCCESS method=VerifyUserCanGetLowestPriceProduct.VerifyUserCanSearchProduct()[pri:2, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e]" started-at="2022-10-11T12:14:03 IST" name="beforeMethod" finished-at="2022-10-11T12:14:03 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyUserCanGetLowestPriceProductFromEachPage()[pri:3, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e]" started-at="2022-10-11T12:14:03 IST" name="VerifyUserCanGetLowestPriceProductFromEachPage" finished-at="2022-10-11T12:14:13 IST" duration-ms="10610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserCanGetLowestPriceProductFromEachPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e]" started-at="2022-10-11T12:14:13 IST" name="afterMethod" finished-at="2022-10-11T12:14:13 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserCanGetLowestPriceProductFromEachPage status=SUCCESS method=VerifyUserCanGetLowestPriceProduct.VerifyUserCanGetLowestPriceProductFromEachPage()[pri:3, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testClasses.VerifyUserCanGetLowestPriceProduct@536f2a7e]" started-at="2022-10-11T12:14:13 IST" name="afterClass" finished-at="2022-10-11T12:14:13 IST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testClasses.VerifyUserCanGetLowestPriceProduct -->
      <class name="testClasses.VerifyUserCanAddNewAddress">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:13 IST" name="beforeClass" finished-at="2022-10-11T12:14:13 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:13 IST" name="beforeMethod" finished-at="2022-10-11T12:14:14 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanOpenProfilePage()[pri:4, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:14 IST" name="verifyUserCanOpenProfilePage" finished-at="2022-10-11T12:14:25 IST" duration-ms="11564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanOpenProfilePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:25 IST" name="afterMethod" finished-at="2022-10-11T12:14:25 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanOpenProfilePage status=SUCCESS method=VerifyUserCanAddNewAddress.verifyUserCanOpenProfilePage()[pri:4, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:25 IST" name="beforeMethod" finished-at="2022-10-11T12:14:25 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:25 IST" name="addNewAddress" data-provider="addressData" finished-at="2022-10-11T12:14:27 IST" duration-ms="1819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Akshay]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8956235623]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[413512]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Nanded Road]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[B-22, A pune]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:27 IST" name="afterMethod" finished-at="2022-10-11T12:14:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewAddress status=SUCCESS method=VerifyUserCanAddNewAddress.addNewAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:27 IST" name="beforeMethod" finished-at="2022-10-11T12:14:27 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:27 IST" name="addNewAddress" data-provider="addressData" finished-at="2022-10-11T12:14:28 IST" duration-ms="1401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sneha]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7845124512]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[411023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Warje]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[A-32, B shivaji nagar, near english school]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:28 IST" name="afterMethod" finished-at="2022-10-11T12:14:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewAddress status=SUCCESS method=VerifyUserCanAddNewAddress.addNewAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@72bc6553]" started-at="2022-10-11T12:14:28 IST" name="afterClass" finished-at="2022-10-11T12:14:28 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testClasses.VerifyUserCanAddNewAddress -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
